[tool.poetry]
name = "ski-lint"
version = "0.3.0"
description = "A pre-commit hook, that enforces ASCII content."
authors = ["Serhii Dimchenko <svdimchenko@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/svdimchenko/ski-lint/"
repository = "https://github.com/svdimchenko/ski-lint/"

# https://pypi.org/pypi?%3Aaction=list_classifiers
classifiers = [
	"Programming Language :: Python",
	"Topic :: Software Development :: Libraries :: Python Modules",
	"Development Status :: 4 - Beta",
	"License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
]

[tool.poetry.scripts]
ski-lint = 'ski_lint.cli:main'

[tool.poetry.extras]
test = ["nox"]

[tool.poetry.dependencies]
python = ">=3.9"
chardet = "^5.2.0"
omegaconf = "^2.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.1"
pre-commit = "^3.0.0"
nox = "^2024.4.15"
mypy = "^1.10.0"
ruff = "^0.7.4"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "[%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
	# The following rules may cause conflicts when used with the formatter
	"COM812",
	"ISC001",

	# General ignores
	"D107",   # Missing docstring in `__init__`
	"D203",   # one-blank-line-before-class
	"D213",   # multi-line-summary-second-line
	"G004",   # Logging statement uses f-string
]

fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = [
	"ANN001",  # Missing type annotation for function argument
	"ANN201",  # Missing return type annotation for public function
	"D100",    # Missing docstring in public module
	"D103",    # Missing docstring in public function
	"S101",    # Use of `assert` detected
	"S603",    # `subprocess` call: check for execution of untrusted input
]
"__init__.py" = ["D104"]  # Missing docstring in public package

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
